function GameContainsAllTags(n,t){let i=n.childNodes[1].childNodes[1].innerText;for(let n=0;n<t.length;n++)if(i.indexOf(t[n])==-1)return!1;return!0}function UpdateGames(n,t){for(let i=0;i<n.length;i++)GameContainsAllTags(n[i],t)?n[i].classList.contains("hidden")&&(n[i].classList.remove("hidden"),n[i].classList.add("d-flex")):n[i].classList.contains("hidden")||(n[i].classList.remove("d-flex"),n[i].classList.add("hidden"))}function MakeElements(n){let t=new Map;return n.forEach(n=>{t.set(n,document.createElement(n))}),t}function AddGame(n,t){const r=document.querySelector(".games");let i=MakeElements(["li","img","div","input","h3","button"]);i.get("input").value=t;i.get("input").setAttribute("data-role","taginput");i.get("input").setAttribute("readonly","readonly");i.get("button").setAttribute("type","button");i.get("button").classList.add("btn");i.get("button").innerHTML="Join";i.get("button").classList.add("btn-primary");i.get("button").classList.add("join-game");i.get("h3").innerHTML=n;i.get("h3").classList.add("tags");i.get("img").setAttribute("src","img/preview.png");i.get("li").classList.add("game");i.get("li").classList.add("d-flex");i.get("li").classList.add("col-md-4");i.get("li").classList.add("game-"+n);i.get("div").append(i.get("h3"));i.get("div").append(i.get("input"));i.get("div").append(i.get("button"));i.get("li").append(i.get("img"));i.get("li").append(i.get("div"));r.append(i.get("li"));i.get("button").addEventListener("click",function(){hubConnection.invoke("Join",n,t)})}function MakeGameField(){document.querySelector(".search").classList.add("hidden");document.querySelector(".play").classList.remove("hidden");let t=document.querySelector(".play"),n=document.createElement("h1");n.innerHTML="Waiting for your opponent";t.append(n)}function CreateTable(n){const t=document.createElement("div"),i=document.createElement("table");for(let t=0;t<3;t++){let r=document.createElement("tr");for(let i=0;i<3;i++){let u=document.createElement("td");u.addEventListener("click",function(){this.innerHTML=="X"||this.innerHTML=="O"||hubConnection.invoke("Move",n,PLAYER,t,i)});r.append(u)}i.append(r)}i.id="myTable";t.classList.add("d-flex");t.classList.add("justify-content-center");t.append(i);document.querySelector(".play").append(t)}function Check(n,t){for(let r=0;r<pos.length;r++){var i=!0;for(let u=0;u<pos[r].length;u++)n.rows[pos[r][u][0]].cells[pos[r][u][1]].innerHTML!=t&&(i=!1);if(i)return!0}return!1}function BackAndDelete(n){document.querySelector("#inputGameName").value="";document.querySelector("#inputTags").value="";document.querySelector(".search").classList.remove("hidden");document.querySelector(".play").classList.add("hidden");document.querySelector(".play").innerHTML="";const t=document.querySelector(".game-"+n);t!=undefined&&t.remove()}function CheckDraw(n){let t=0;for(let i=0;i<3;i++)for(let r=0;r<3;r++)n.rows[i].cells[r].innerHTML&&t++;return t==9}const tagContainer=document.querySelector(".tag-container"),input=document.querySelector(".container input"),buttonInput=document.querySelector(".container button");buttonInput.addEventListener("click",function(){const n=input.value.split(",");UpdateGames(document.querySelectorAll(".game"),n)});const hubConnection=(new signalR.HubConnectionBuilder).withUrl("/games").build();hubConnection.on("Init",function(n){for(let t=0;t<n.length;t++)AddGame(n[t].gameName,n[t].tags)});hubConnection.on("OthersCreate",function(n,t){AddGame(n,t)});hubConnection.on("SelfCreate",function(n,t){input.value="";document.querySelector("#inputGameName").value="";MakeGameField(n,t)});PLAYER="none";hubConnection.on("Back",function(n){BackAndDelete(n)});hubConnection.on("InitXPlayer",function(n){PLAYER="X";document.querySelector(".play > h1").innerHTML="Opponent was found";CreateTable(n);const t=document.createElement("button");t.classList.add("btn");t.classList.add("btn-primary");t.innerHTML="Back";const i=document.createElement("h2");i.innerHTML="Your move!";document.querySelector(".play").append(i);document.querySelector(".play").append(t);t.addEventListener("click",function(){hubConnection.invoke("Back",n)})});hubConnection.on("InitOPlayer",function(n){PLAYER="O";document.querySelector(".search").classList.add("hidden");document.querySelector(".play").classList.remove("hidden");let u=document.querySelector(".play"),i=document.createElement("h1");i.innerHTML="Opponent was found";u.append(i);CreateTable(n);const r=document.createElement("h2");r.innerHTML="Wait for opponent move!";document.querySelector(".play").append(r);const t=document.createElement("button");t.classList.add("btn");t.classList.add("btn-primary");t.innerHTML="Back";document.querySelector(".play").append(t);t.addEventListener("click",function(){hubConnection.invoke("Back",n)})});hubConnection.on("UpdateOther",function(n){const t=document.querySelector(".game-"+n);t&&t.remove()});const pos=[[[0,0],[0,1],[0,2]],[[1,0],[1,1],[1,2]],[[2,0],[2,1],[2,2]],[[0,0],[1,0],[2,0]],[[0,1],[1,1],[2,1]],[[0,2],[1,2],[2,2]],[[0,0],[1,1],[2,2]],[[2,0],[1,1],[0,2]],];hubConnection.on("GoBack",function(n,t){alert(n+"- winner!");BackAndDelete(t)});hubConnection.on("Move",function(n,t,i,r){const u=document.querySelector("table");u.rows[i].cells[r].innerHTML=t;document.querySelector(".play > h2").innerHTML=t==PLAYER?"Wait for opponent move!":"Make your move!";let f=Check(u,"X"),e=Check(u,"O"),o=CheckDraw(u);f&&hubConnection.invoke("GoBack","X",n);e&&hubConnection.invoke("GoBack","O",n);o&&hubConnection.invoke("GoBack","XO",n)});hubConnection.on("DeleteGame",function(n){const t=document.querySelector(".game-"+n);t!=undefined&&t.remove()});const createButton=document.querySelector(".create-game > button");createButton.addEventListener("click",function(){let n=document.querySelector("#inputGameName").value;const t=document.querySelector("#inputTags").value;hubConnection.invoke("Create",n,t)});hubConnection.start();hubConnection.invoke("Init");